diff -rc pine4.60/pico/ebind.h pine4.60.cumulative/pico/ebind.h
*** pine4.60/pico/ebind.h	2004-05-07 14:38:25.000000000 -0700
--- pine4.60.cumulative/pico/ebind.h	2004-07-12 10:28:09.000000000 -0700
***************
*** 102,107 ****
--- 102,108 ----
  	{CTRL|'Z',		bktoshell},
  #endif
  	{CTRL|'@',		forwword},
+ 	{CTRL|'\\',		remove_trailing_quote},	/* same as ^4 */
  	{CTRL|'^',		setmark},
  	{CTRL|'_',		alt_editor},
  	{0x7F,			backdel},
diff -rc pine4.60/pico/efunc.h pine4.60.cumulative/pico/efunc.h
*** pine4.60/pico/efunc.h	2004-05-07 14:41:15.000000000 -0700
--- pine4.60.cumulative/pico/efunc.h	2004-07-12 10:28:10.000000000 -0700
***************
*** 170,175 ****
--- 170,176 ----
  extern	int lnewline PROTO((void));
  extern	int ldelete PROTO((long, int (*) PROTO((int))));
  extern	int lisblank PROTO((struct LINE *));
+ extern	int lequals PROTO((struct LINE *, char *));
  extern	void kdelete PROTO((void));
  extern	int kinsert PROTO((int));
  extern	int kremove PROTO((int));
***************
*** 287,292 ****
--- 288,294 ----
  extern	int quickexit PROTO((int, int));
  extern	int abort_composer PROTO((int, int));
  extern	int suspend_composer PROTO((int, int));
+ extern	int remove_trailing_quote PROTO((void));
  extern	int wquit PROTO((int, int));
  extern	int ctrlg PROTO((int, int));
  extern	int rdonly PROTO((void));
diff -rc pine4.60/pico/estruct.h pine4.60.cumulative/pico/estruct.h
*** pine4.60/pico/estruct.h	2004-05-07 14:41:16.000000000 -0700
--- pine4.60.cumulative/pico/estruct.h	2004-07-12 10:28:19.000000000 -0700
***************
*** 207,212 ****
--- 207,213 ----
  #define KS_SELECTCUR
  #define KS_UNDO
  #define KS_SPELLCHK
+ #define KS_REPLYALL
  #endif
  
  
diff -rc pine4.60/pico/line.c pine4.60.cumulative/pico/line.c
*** pine4.60/pico/line.c	2004-05-07 14:41:17.000000000 -0700
--- pine4.60.cumulative/pico/line.c	2004-07-12 10:28:10.000000000 -0700
***************
*** 647,652 ****
--- 647,673 ----
  
  
  /*
+  * Returns true if the given line is the same as the given text, false
+  * otherwise.
+  */
+ int lequals(line, text)
+      struct LINE *line;
+      char *text;
+ {
+     int i;
+ 
+     if(llength(line) != strlen(text))
+ 	return(FALSE);
+ 
+     for(i = 0; i < llength(line); i++)
+       if(lgetc(line, i).c != text[i])
+ 	return(FALSE);
+ 
+     return(TRUE);
+ }
+    
+ 
+ /*
   * Delete all of the text saved in the kill buffer. Called by commands when a
   * new kill context is being created. The kill buffer array is released, just
   * in case the buffer has grown to immense size. No errors.
diff -rc pine4.60/pico/msmenu.h pine4.60.cumulative/pico/msmenu.h
*** pine4.60/pico/msmenu.h	1998-02-27 16:10:30.000000000 -0800
--- pine4.60.cumulative/pico/msmenu.h	2004-07-12 10:28:19.000000000 -0700
***************
*** 94,101 ****
  #define KS_SELECTCUR		    196
  #define KS_UNDO			    197
  #define KS_SPELLCHK		    198
  
! #define KS_RANGEEND		198
  
  #define KS_COUNT	    ((KS_RANGEEND - KS_RANGESTART) + 1)
  
--- 94,102 ----
  #define KS_SELECTCUR		    196
  #define KS_UNDO			    197
  #define KS_SPELLCHK		    198
+ #define KS_REPLYALL                 199
  
! #define KS_RANGEEND		199
  
  #define KS_COUNT	    ((KS_RANGEEND - KS_RANGESTART) + 1)
  
diff -rc pine4.60/pico/pico.c pine4.60.cumulative/pico/pico.c
*** pine4.60/pico/pico.c	2004-05-07 14:43:47.000000000 -0700
--- pine4.60.cumulative/pico/pico.c	2004-07-12 10:28:10.000000000 -0700
***************
*** 74,79 ****
--- 74,80 ----
  void	breplace PROTO((void *));
  int	any_header_changes PROTO((void));
  int     cleanwhitespace PROTO((void));
+ void    reverse_skip PROTO((char *));
  #ifdef	_WINDOWS
  int	composer_file_drop PROTO((int, int, char *));
  #endif
***************
*** 676,681 ****
--- 677,684 ----
  int f, n;
  {
      register int    s;
+     char *buf_before_send = NULL;
+     int buflen = 0;
  
      if(Pmaster){
  	char *result;
***************
*** 691,696 ****
--- 694,703 ----
  	  if(spell(0, 0) == -1)
  	    sleep(3);    /* problem, show error */
  #endif
+ 
+ 	if(Pmaster->remove_trailing_quote)
+ 	   remove_trailing_quote();
+ 
  	/*
  	 * if we're not in header, show some of it as we verify sending...
  	 */
***************
*** 701,706 ****
--- 708,715 ----
  	   && (result = (*Pmaster->exittest)(Pmaster->headents,
  					     redraw_pico_for_callback))){
  	    Pmaster->arm_winch_cleanup--;
+ 	    if(Pmaster->remove_trailing_quote)
+ 	      yank(0, 1);			/* put removed quote back */
  	    if(sgarbf)
  	      update();
  
***************
*** 865,870 ****
--- 874,973 ----
  }
  
  /*
+  * Examines the composition to see if it ends with a trailing quote. If it
+  * does, the trailing quote is removed (to the kill buffer).
+  *
+  * A quote is a piece of quoted text from an email that the user is replying
+  * to; each line of the quote is prefixed with Pmaster->quote_str, usually '>'.
+  * Quotes may span multiple lines. A quote is considered trailing if it is the
+  * last piece of text in the composition, disregarding whitespace and the
+  * signature.
+  *
+  * Returns true if a quote was removed, false otherwise.
+  *
+  * TODO: what if trailing quote starts on the first line of the buffer?
+  */
+ int
+ remove_trailing_quote()
+ {
+     char quote_buf[1];
+ 
+     kdelete();				/* clear the kill buffer */
+ 
+     /* start from the end, but above the signature (if it's there) */
+     reverse_skip(Pmaster->sig);
+     gotobol(0, 0);
+     setmark(0, 0);
+ 
+     /* search backward for a quoted line. if we hit a non-blank, non-quoted
+      * line, abort. */
+     while (curwp->w_dotp != curwp->w_linep){
+ 	if(lisblank(curwp->w_dotp)){
+ 	    backline(0, 1);
+ 	    continue;
+ 	}
+ 	else if(quote_match(Pmaster->quote_str, curwp->w_dotp, quote_buf, 1))
+ 	    break;
+ 	else{
+     setmark(0, 0);		/* unset the mark */
+ 	    emlwrite("No trailing quote.", NULL);
+ 	    return(FALSE);
+ 	}
+     }
+ 
+     if(curwp->w_dotp == curwp->w_linep){
+ 	setmark(0, 0);		/* unset the mark */
+ 	emlwrite("No trailing quote.", NULL);
+ 	return(FALSE);
+     }
+ 
+     /* work backward to find the first line of this quote */
+     while (quote_match(Pmaster->quote_str, curwp->w_dotp, quote_buf, 1))
+ 	backline(0, 1);
+ 
+     /* if the lines immediately preceding the quote are a blank line and the
+      * reply leadin line, then this quote is whole, not trailing, so abort.
+      */
+     if(Pmaster->reply_leadin &&
+        lisblank(curwp->w_dotp) &&
+        lequals(lback(curwp->w_dotp), Pmaster->reply_leadin)){
+ 	setmark(0, 0);		/* unset the mark */
+ 	emlwrite("Last quote is whole, not trailing.", NULL);
+ 	return(FALSE);
+     }
+ 
+     forwline(0, 1);
+     killregion(0, 0);
+     PaintBody(0);
+     emlwrite("Removed trailing quote. To undo, press ^U.", NULL);
+     return(TRUE);
+ }
+ 
+ 
+ /*
+  * Searches the buffer contents for the given text (which may have embedded
+  * newlines). If found, skips the cursor above the text. Otherwise, leaves the
+  * cursor at the bottom of the buffer.
+  */
+ void
+ reverse_skip(text)
+ char *text;
+ {
+     int found = FALSE, wrapped = FALSE;
+ 
+     gotobob(0, 0);
+     /* search until we find it or we wrap (hence it's not found) */
+     while (!found && !wrapped)
+ 	found = forscan(&wrapped, text, NULL, 0, 1 /* PTBEG */);
+ 
+     if(found)
+ 	backline(0, 1);
+     else
+ 	gotoeob(0, 0);
+ }
+ 
+ 
+ /*
   * Abort.
   * Beep the beeper. Kill off any keyboard macro, etc., that is in progress.
   * Sometimes called as a routine, to do general aborting of stuff.
diff -rc pine4.60/pico/pico.h pine4.60.cumulative/pico/pico.h
*** pine4.60/pico/pico.h	2004-05-07 12:35:10.000000000 -0700
--- pine4.60.cumulative/pico/pico.h	2004-07-12 10:28:10.000000000 -0700
***************
*** 186,192 ****
--- 186,194 ----
      char  *pine_version;		/* string containing Pine's version */
      char  *oper_dir;			/* Operating dir (confine to tree) */
      char  *home_dir;                    /* Home directory that should be used (WINDOWS) */
+     char  *reply_leadin;		/* leadin before quoted text, or NULL*/
      char  *quote_str;			/* prepended to lines of quoted text */
+     char  *sig;				/* signature, may be NULL */
      char  *exit_label;			/* Label for ^X in keymenu */
      char  *ctrlr_label;			/* Label for ^R in keymenu */
      char  *alt_spell;			/* Checker to use other than "spell" */
***************
*** 203,208 ****
--- 205,211 ----
      unsigned always_spell_check:1;      /* always spell-checking upon quit */
      unsigned strip_ws_before_send:1;    /* don't default strip bc of flowed */
      unsigned allow_flowed_text:1;    /* clean text when done to keep flowed */
+     unsigned remove_trailing_quote:1;   /* remove trailing quote on send */
      int   (*helper)();			/* Pine's help function  */
      int   (*showmsg)();			/* Pine's display_message */
      int   (*suspend)();			/* Pine's suspend */
diff -rc pine4.60/pico/resource.h pine4.60.cumulative/pico/resource.h
*** pine4.60/pico/resource.h	2003-08-22 16:58:22.000000000 -0700
--- pine4.60.cumulative/pico/resource.h	2004-07-12 10:28:19.000000000 -0700
***************
*** 96,101 ****
--- 96,102 ----
  #define IDM_MI_SELECTCUR                196
  #define IDM_MI_UNDO                     197
  #define IDM_MI_SPELLCHK                 198
+ #define IDM_MI_REPLY_ALL                199
  #define	IDM_OPT_CARETBLOCK		200
  #define	IDM_OPT_CARETSMALLBLOCK		201
  #define	IDM_OPT_CARETHBAR		202
diff -rc pine4.60/pine/adrbkcmd.c pine4.60.cumulative/pine/adrbkcmd.c
*** pine4.60/pine/adrbkcmd.c	2004-05-07 15:28:34.000000000 -0700
--- pine4.60.cumulative/pine/adrbkcmd.c	2004-07-12 10:28:10.000000000 -0700
***************
*** 4479,4486 ****
  
      gf_clear_so_writec((STORE_S *) pb->contents.text.data);
  
!     pine_send(outgoing, &body, "FORWARDING ADDRESS BOOK ENTRY", role, NULL,
!  	      NULL, NULL, NULL, NULL, 0);
      
      ps->mangled_screen = 1;
      ret = 1;
--- 4479,4486 ----
  
      gf_clear_so_writec((STORE_S *) pb->contents.text.data);
  
!     pine_send(NULL, outgoing, &body, "FORWARDING ADDRESS BOOK ENTRY", role,
! 	      NULL, NULL, NULL, NULL, NULL, 0);
      
      ps->mangled_screen = 1;
      ret = 1;
diff -rc pine4.60/pine/help.c pine4.60.cumulative/pine/help.c
*** pine4.60/pine/help.c	2004-04-08 09:59:19.000000000 -0700
--- pine4.60.cumulative/pine/help.c	2004-07-12 10:28:10.000000000 -0700
***************
*** 1443,1449 ****
  	memset((void *)&fake_reply, 0, sizeof(fake_reply));
  	fake_reply.flags	   = REPLY_PSEUDO;
  	fake_reply.data.pico_flags = P_HEADEND;
! 	pine_send(outgoing, &body, composer_title, NULL, NULL,
  		  &fake_reply, NULL, NULL, pf, 0);
      }
      
--- 1443,1449 ----
  	memset((void *)&fake_reply, 0, sizeof(fake_reply));
  	fake_reply.flags	   = REPLY_PSEUDO;
  	fake_reply.data.pico_flags = P_HEADEND;
! 	pine_send(NULL, outgoing, &body, composer_title, NULL, NULL,
  		  &fake_reply, NULL, NULL, pf, 0);
      }
      
diff -rc pine4.60/pine/init.c pine4.60.cumulative/pine/init.c
*** pine4.60/pine/init.c	2004-05-07 15:17:43.000000000 -0700
--- pine4.60.cumulative/pine/init.c	2004-07-12 10:28:26.000000000 -0700
***************
*** 2549,2554 ****
--- 2549,2556 ----
  	 F_AUTO_REPLY_TO, h_config_auto_reply_to, PREF_RPLY},
  	{"signature-at-bottom",
  	 F_SIG_AT_BOTTOM, h_config_sig_at_bottom, PREF_RPLY},
+ 	{"separate-reply-all",
+ 	 F_SEPARATE_REPLY_ALL, h_config_separate_reply_all, PREF_RPLY},
  	{"strip-from-sigdashes-on-reply",
  	 F_ENABLE_STRIP_SIGDASHES, h_config_strip_sigdashes, PREF_RPLY},
  
***************
*** 2581,2586 ****
--- 2583,2590 ----
  	 F_WARN_ABOUT_NO_TO_OR_CC, h_config_warn_if_no_to_or_cc, PREF_SEND},
  	{"warn-if-blank-subject",
  	 F_WARN_ABOUT_NO_SUBJECT, h_config_warn_if_subj_blank, PREF_SEND},
+ 	{"remove-trailing-quote",
+ 	 F_REMOVE_TRAILING_QUOTE, h_config_remove_trailing_quote, PREF_SEND},
  
  /* Folder */
  	{"combined-subdirectory-display",
***************
*** 2662,2667 ****
--- 2666,2674 ----
  #endif
  	{"quell-charset-warning",
  	 F_QUELL_CHARSET_WARNING, h_config_quell_charset_warning, PREF_VIEW},
+ 	{"quell-displaying-flowed-text",
+ 	 F_QUELL_DISPLAYING_FLOWED_TEXT, h_config_quell_displaying_flowed_text,
+ 	 PREF_VIEW},
  
  /* News */
  	{"compose-sets-newsgroup-without-confirm",
diff -rc pine4.60/pine/mailcmd.c pine4.60.cumulative/pine/mailcmd.c
*** pine4.60/pine/mailcmd.c	2004-05-06 10:47:21.000000000 -0700
--- pine4.60.cumulative/pine/mailcmd.c	2004-07-12 10:28:19.000000000 -0700
***************
*** 59,65 ****
   */
  void      cmd_delete PROTO((struct pine *, MSGNO_S *, int, CmdWhere));
  void      cmd_undelete PROTO((struct pine *, MSGNO_S *, int));
! void      cmd_reply PROTO((struct pine *, MSGNO_S *, int));
  void      cmd_forward PROTO((struct pine *, MSGNO_S *, int));
  void      cmd_bounce PROTO((struct pine *, MSGNO_S *, int));
  void      cmd_print PROTO((struct pine *, MSGNO_S *, int, CmdWhere));
--- 59,65 ----
   */
  void      cmd_delete PROTO((struct pine *, MSGNO_S *, int, CmdWhere));
  void      cmd_undelete PROTO((struct pine *, MSGNO_S *, int));
! void      cmd_reply PROTO((struct pine *, MSGNO_S *, int, int));
  void      cmd_forward PROTO((struct pine *, MSGNO_S *, int));
  void      cmd_bounce PROTO((struct pine *, MSGNO_S *, int));
  void      cmd_print PROTO((struct pine *, MSGNO_S *, int, CmdWhere));
***************
*** 568,576 ****
  
            /*---------- Reply to message ----------*/
        case MC_REPLY :
! 	cmd_reply(state, msgmap, 0);
  	break;
  
  
            /*---------- Forward message ----------*/
        case MC_FORWARD :
--- 568,581 ----
  
            /*---------- Reply to message ----------*/
        case MC_REPLY :
! 	cmd_reply(state, msgmap, 0, (F_ON(F_SEPARATE_REPLY_ALL, ps_global)) ?
! 	                             RSF_NONE : RSF_QUERY_REPLY_ALL);
  	break;
  
+           /*---------- Reply-all to message ----------*/
+       case MC_REPLY_ALL :
+ 	cmd_reply(state, msgmap, 0, RSF_FORCE_REPLY_ALL);
+ 	break;
  
            /*---------- Forward message ----------*/
        case MC_FORWARD :
***************
*** 2651,2660 ****
  
   ----*/
  void
! cmd_reply(state, msgmap, agg)
       struct pine *state;
       MSGNO_S     *msgmap;
       int	  agg;
  {
      if(any_messages(msgmap, NULL, "to Reply to")){
  #if	defined(DOS) && !defined(WIN32)
--- 2656,2666 ----
  
   ----*/
  void
! cmd_reply(state, msgmap, agg, flags)
       struct pine *state;
       MSGNO_S     *msgmap;
       int	  agg;
+      int	  flags;
  {
      if(any_messages(msgmap, NULL, "to Reply to")){
  #if	defined(DOS) && !defined(WIN32)
***************
*** 2663,2669 ****
  	if(agg && !pseudo_selected(msgmap))
  	  return;
  
! 	reply(state, NULL);
  
  	if(agg)
  	  restore_selected(msgmap);
--- 2669,2675 ----
  	if(agg && !pseudo_selected(msgmap))
  	  return;
  
! 	reply(state, NULL, flags);
  
  	if(agg)
  	  restore_selected(msgmap);
***************
*** 2957,2963 ****
  		break;
  
  	      case 'r':
! 		reply(state, role);
  		break;
  
  	      case 'f':
--- 2963,2969 ----
  		break;
  
  	      case 'r':
! 		reply(state, role, 0);
  		break;
  
  	      case 'f':
***************
*** 10828,10833 ****
--- 10834,10846 ----
  	    sel_opts3[i++].label = "Bounce";
  	}
  
+ 	if(F_ON(F_SEPARATE_REPLY_ALL,state)){ /* reply all? */
+ 	    sel_opts3[i].ch      = '=';
+ 	    sel_opts3[i].rval    = '=';
+ 	    sel_opts3[i].name    = "=";
+ 	    sel_opts3[i++].label = "Reply All";
+ 	}
+ 
  	if(flags & AC_FROM_THREAD){
  	    if(flags & (AC_COLL | AC_EXPN)){
  		sel_opts3[i].ch      = '/';
***************
*** 10882,10888 ****
  	break;
  
        case 'r' :			/* reply */
! 	cmd_reply(state, msgmap, agg);
  	break;
  
        case 'f' :			/* Forward */
--- 10895,10906 ----
  	break;
  
        case 'r' :			/* reply */
! 	cmd_reply(state, msgmap, agg, (F_ON(F_SEPARATE_REPLY_ALL, ps_global)) ?
! 	                               RSF_NONE : RSF_QUERY_REPLY_ALL);
! 	break;
! 
!       case '=' :			/* reply all */
! 	cmd_reply(state, msgmap, agg, RSF_FORCE_REPLY_ALL);
  	break;
  
        case 'f' :			/* Forward */
diff -rc pine4.60/pine/mailindx.c pine4.60.cumulative/pine/mailindx.c
*** pine4.60/pine/mailindx.c	2004-05-06 10:47:23.000000000 -0700
--- pine4.60.cumulative/pine/mailindx.c	2004-07-12 10:28:19.000000000 -0700
***************
*** 112,118 ****
  	RCOMPOSE_MENU,
  	HOMEKEY_MENU,
  	ENDKEY_MENU,
! 	NULL_MENU,
  	{"/","Collapse/Expand",{MC_COLLAPSE,1,{'/'}},KS_NONE},
  	NULL_MENU,
  	NULL_MENU};
--- 112,118 ----
  	RCOMPOSE_MENU,
  	HOMEKEY_MENU,
  	ENDKEY_MENU,
! 	REPLY_ALL_MENU,
  	{"/","Collapse/Expand",{MC_COLLAPSE,1,{'/'}},KS_NONE},
  	NULL_MENU,
  	NULL_MENU};
***************
*** 131,136 ****
--- 131,137 ----
  #define SELCUR_KEY 38
  #define ZOOM_KEY 39
  #define COLLAPSE_KEY 45
+ #define REPLY_ALL_KEY 44	/* used for thread_keymenu, too */
  
  static struct key simple_index_keys[] = 
         {HELP_MENU,
***************
*** 197,203 ****
  	RCOMPOSE_MENU,
  	HOMEKEY_MENU,
  	ENDKEY_MENU,
! 	NULL_MENU,
  	{"/","Collapse/Expand",{MC_COLLAPSE,1,{'/'}},KS_NONE},
  	NULL_MENU,
  	NULL_MENU};
--- 198,204 ----
  	RCOMPOSE_MENU,
  	HOMEKEY_MENU,
  	ENDKEY_MENU,
! 	REPLY_ALL_MENU,
  	{"/","Collapse/Expand",{MC_COLLAPSE,1,{'/'}},KS_NONE},
  	NULL_MENU,
  	NULL_MENU};
***************
*** 535,540 ****
--- 536,543 ----
  		km->keys[EXCLUDE_KEY].label = "eXpunge";
  		KS_OSDATASET(&km->keys[EXCLUDE_KEY], KS_EXPUNGE);
  	    }
+ 	    if(F_OFF(F_SEPARATE_REPLY_ALL,ps_global))
+ 	      clrbitn(REPLY_ALL_KEY, bitmap);
  	}
  
  	if(km != &simple_index_keymenu && !THRD_COLLAPSE_ENABLE())
diff -rc pine4.60/pine/mailpart.c pine4.60.cumulative/pine/mailpart.c
*** pine4.60/pine/mailpart.c	2004-05-06 10:47:24.000000000 -0700
--- pine4.60.cumulative/pine/mailpart.c	2004-07-12 10:28:19.000000000 -0700
***************
*** 171,177 ****
  	{"%", "Print", MC_PRINTMSG,1,{'%'}, KS_PRINT},
  	INDEX_MENU,
  	REPLY_MENU,
! 	FORWARD_MENU};
  INST_KEY_MENU(att_index_keymenu, att_index_keys);
  #define	ATT_PARENT_KEY	 2
  #define	ATT_EXPORT_KEY	11
--- 171,190 ----
  	{"%", "Print", MC_PRINTMSG,1,{'%'}, KS_PRINT},
  	INDEX_MENU,
  	REPLY_MENU,
! 	FORWARD_MENU,
! 
! 	HELP_MENU,
! 	OTHER_MENU,
! 	NULL_MENU,
! 	NULL_MENU,
! 	NULL_MENU,
! 	NULL_MENU,
! 	NULL_MENU,
! 	NULL_MENU,
! 	REPLY_ALL_MENU,
! 	NULL_MENU,
! 	NULL_MENU,
! 	NULL_MENU};
  INST_KEY_MENU(att_index_keymenu, att_index_keys);
  #define	ATT_PARENT_KEY	 2
  #define	ATT_EXPORT_KEY	11
***************
*** 180,185 ****
--- 193,199 ----
  #define	ATT_PRINT_KEY	20
  #define	ATT_REPLY_KEY	22
  #define	ATT_FORWARD_KEY	23
+ #define	ATT_REPLY_ALL_KEY 32
  
  
  static struct key att_view_keys[] =
***************
*** 206,212 ****
  	NULL_MENU,
  	WHEREIS_MENU,
  	{"%", "Print", MC_PRINTMSG,1,{'%'}, KS_PRINT},
! 	NULL_MENU,
  	REPLY_MENU,
  	FORWARD_MENU};
  INST_KEY_MENU(att_view_keymenu, att_view_keys);
--- 220,226 ----
  	NULL_MENU,
  	WHEREIS_MENU,
  	{"%", "Print", MC_PRINTMSG,1,{'%'}, KS_PRINT},
! 	REPLY_ALL_MENU,
  	REPLY_MENU,
  	FORWARD_MENU};
  INST_KEY_MENU(att_view_keymenu, att_view_keys);
***************
*** 218,223 ****
--- 232,238 ----
  #define	ATV_PIPE_KEY	16
  #define	ATV_BOUNCE_KEY	17
  #define	ATV_PRINT_KEY	20
+ #define	ATV_REPLY_ALL_KEY 21
  #define	ATV_REPLY_KEY	22
  #define	ATV_FORWARD_KEY	23
  
***************
*** 257,263 ****
  void	    display_digest_att PROTO((long, ATTACH_S *, int));
  void	    forward_attachment PROTO((MAILSTREAM *, long, ATTACH_S *));
  void	    forward_msg_att PROTO((MAILSTREAM *, long, ATTACH_S *));
! void	    reply_msg_att PROTO((MAILSTREAM *, long, ATTACH_S *));
  void	    bounce_msg_att PROTO((MAILSTREAM *, long, char *, char *));
  int	    scroll_attachment PROTO((char *, STORE_S *, SourceType,
  				     HANDLE_S *, ATTACH_S *, int));
--- 272,278 ----
  void	    display_digest_att PROTO((long, ATTACH_S *, int));
  void	    forward_attachment PROTO((MAILSTREAM *, long, ATTACH_S *));
  void	    forward_msg_att PROTO((MAILSTREAM *, long, ATTACH_S *));
! void	    reply_msg_att PROTO((MAILSTREAM *, long, ATTACH_S *, int));
  void	    bounce_msg_att PROTO((MAILSTREAM *, long, char *, char *));
  int	    scroll_attachment PROTO((char *, STORE_S *, SourceType,
  				     HANDLE_S *, ATTACH_S *, int));
***************
*** 546,551 ****
--- 561,568 ----
  	       || MIME_DGST(last_type, last_subtype)){
  		if(F_OFF(F_ENABLE_BOUNCE, ps))
  		  clrbitn(ATT_BOUNCE_KEY, bitmap);
+ 		if(F_OFF(F_SEPARATE_REPLY_ALL, ps))
+ 		  clrbitn(ATT_REPLY_ALL_KEY, bitmap);
  
  		km->keys[ATT_EXPORT_KEY].name  = "";
  		km->keys[ATT_EXPORT_KEY].label = "";
***************
*** 553,558 ****
--- 570,576 ----
  	    else{
  		clrbitn(ATT_BOUNCE_KEY, bitmap);
  		clrbitn(ATT_REPLY_KEY, bitmap);
+ 		clrbitn(ATT_REPLY_ALL_KEY, bitmap);
  
  		if(last_type != TYPETEXT)
  		  clrbitn(ATT_PRINT_KEY, bitmap);
***************
*** 916,922 ****
  	    break;
  
  	  case MC_REPLY :
! 	    reply_msg_att(ps->mail_stream, msgno, current->attp);
  	    break;
  
  	  case MC_FORWARD :
--- 934,947 ----
  	    break;
  
  	  case MC_REPLY :
! 	    reply_msg_att(ps->mail_stream, msgno, current->attp,
! 	                  (F_ON(F_SEPARATE_REPLY_ALL, ps_global)) ?
! 	                   RSF_NONE : RSF_QUERY_REPLY_ALL);
! 	    break;
! 
! 	  case MC_REPLY_ALL :
! 	    reply_msg_att(ps->mail_stream, msgno, current->attp,
! 	                  RSF_FORCE_REPLY_ALL);
  	    break;
  
  	  case MC_FORWARD :
***************
*** 2655,2664 ****
--- 2680,2692 ----
      if(MIME_MSG_A(a) || MIME_DGST_A(a)){
  	if(F_OFF(F_ENABLE_BOUNCE, ps_global))
  	  clrbitn(ATV_BOUNCE_KEY, sargs.keys.bitmap);
+ 	if(F_OFF(F_SEPARATE_REPLY_ALL, ps_global))
+ 	  clrbitn(ATV_REPLY_ALL_KEY, sargs.keys.bitmap);
      }
      else{
  	clrbitn(ATV_BOUNCE_KEY, sargs.keys.bitmap);
  	clrbitn(ATV_REPLY_KEY, sargs.keys.bitmap);
+ 	clrbitn(ATV_REPLY_ALL_KEY, sargs.keys.bitmap);
  	clrbitn(ATV_EXPORT_KEY, sargs.keys.bitmap);
      }
  
***************
*** 2701,2707 ****
  	break;
  
        case MC_REPLY :
! 	reply_msg_att(ps_global->mail_stream, rawno, sparms->proc.data.p);
  	break;
  
        case MC_FORWARD :
--- 2729,2742 ----
  	break;
  
        case MC_REPLY :
! 	reply_msg_att(ps_global->mail_stream, rawno, sparms->proc.data.p,
! 	              (F_ON(F_SEPARATE_REPLY_ALL, ps_global)) ?
! 	              RSF_NONE : RSF_QUERY_REPLY_ALL);
! 	break;
! 
!       case MC_REPLY_ALL :
! 	reply_msg_att(ps_global->mail_stream, rawno, sparms->proc.data.p,
! 	              RSF_FORCE_REPLY_ALL);
  	break;
  
        case MC_FORWARD :
***************
*** 3186,3192 ****
  
  	    if(fetch_contents(stream, msgno, a->number,
  			      &body->nested.part->next->body)){
! 		pine_send(outgoing, &body, "FORWARD MESSAGE",
  			  role, NULL, NULL, redraft_pos, NULL, NULL, FALSE);
  
  		ps_global->mangled_screen = 1;
--- 3221,3227 ----
  
  	    if(fetch_contents(stream, msgno, a->number,
  			      &body->nested.part->next->body)){
! 		pine_send(NULL, outgoing, &body, "FORWARD MESSAGE",
  			  role, NULL, NULL, redraft_pos, NULL, NULL, FALSE);
  
  		ps_global->mangled_screen = 1;
***************
*** 3357,3363 ****
  	    fs_give((void **) &p);
  
  	    if(body){
! 		pine_send(outgoing, &body,
  			  "FORWARD MESSAGE",
  			  role, NULL,
  			  reply.flags ? &reply : NULL,
--- 3392,3398 ----
  	    fs_give((void **) &p);
  
  	    if(body){
! 		pine_send(NULL, outgoing, &body,
  			  "FORWARD MESSAGE",
  			  role, NULL,
  			  reply.flags ? &reply : NULL,
***************
*** 3400,3416 ****
  
   ----*/
  void
! reply_msg_att(stream, msgno, a)
      MAILSTREAM *stream;
      long	msgno;
      ATTACH_S   *a;
  {
      ADDRESS       *saved_from, *saved_to, *saved_cc, *saved_resent;
      ENVELOPE      *outgoing;
      BODY          *body;
      void          *msgtext;
      char          *tp, *prefix = NULL;
!     int            include_text = 0, flags = RSF_QUERY_REPLY_ALL;
      long           rflags;
      PAT_STATE      dummy;
      REDRAFT_POS_S *redraft_pos = NULL;
--- 3435,3452 ----
  
   ----*/
  void
! reply_msg_att(stream, msgno, a, flags)
      MAILSTREAM *stream;
      long	msgno;
      ATTACH_S   *a;
+     int flags;
  {
      ADDRESS       *saved_from, *saved_to, *saved_cc, *saved_resent;
      ENVELOPE      *outgoing;
      BODY          *body;
      void          *msgtext;
      char          *tp, *prefix = NULL;
!     int            include_text = 0;
      long           rflags;
      PAT_STATE      dummy;
      REDRAFT_POS_S *redraft_pos = NULL;
***************
*** 3522,3528 ****
  				 msgtext, prefix, include_text, role,
  				 1, &redraft_pos)){
  		/* partially formatted outgoing message */
! 		pine_send(outgoing, &body, "COMPOSE MESSAGE REPLY",
  			  role, fcc.tptr, &reply, redraft_pos, NULL, NULL, 0);
  
  		pine_free_body(&body);
--- 3558,3564 ----
  				 msgtext, prefix, include_text, role,
  				 1, &redraft_pos)){
  		/* partially formatted outgoing message */
! 		pine_send(NULL, outgoing, &body, "COMPOSE MESSAGE REPLY",
  			  role, fcc.tptr, &reply, redraft_pos, NULL, NULL, 0);
  
  		pine_free_body(&body);
diff -rc pine4.60/pine/mailview.c pine4.60.cumulative/pine/mailview.c
*** pine4.60/pine/mailview.c	2004-05-06 10:47:25.000000000 -0700
--- pine4.60.cumulative/pine/mailview.c	2004-07-12 10:28:26.000000000 -0700
***************
*** 222,228 ****
  	NULL_MENU,
  	NULL_MENU,
  	NULL_MENU,
! 	NULL_MENU,
  	NULL_MENU,
  	NULL_MENU,
  	NULL_MENU};
--- 222,228 ----
  	NULL_MENU,
  	NULL_MENU,
  	NULL_MENU,
! 	REPLY_ALL_MENU,
  	NULL_MENU,
  	NULL_MENU,
  	NULL_MENU};
***************
*** 236,241 ****
--- 236,242 ----
  #define BOUNCE_KEY		33
  #define FLAG_KEY		34
  #define VIEW_PIPE_KEY		35
+ #define REPLY_ALL_KEY		44
  
  static struct key simple_text_keys[] =
         {HELP_MENU,
***************
*** 560,565 ****
--- 561,569 ----
  	if(F_OFF(F_ENABLE_FULL_HDR, ps_global))
  	  clrbitn(VIEW_FULL_HEADERS_KEY, scrollargs.keys.bitmap);
  
+ 	if (F_OFF(F_SEPARATE_REPLY_ALL, ps_global))
+ 	  clrbitn(REPLY_ALL_KEY, scrollargs.keys.bitmap);
+ 
  	if(!handles){
  	    /*
  	     * NOTE: the comment below only really makes sense if we
***************
*** 4568,4574 ****
  	if(!(role && role->fcc))
  	  fcc = get_fcc_based_on_to(outgoing->to);
  
! 	pine_send(outgoing, &body, "\"MAILTO\" COMPOSE",
  		  role, fcc, &fake_reply, redraft_pos, NULL, NULL, 0);
  	rv++;
  	ps_global->mangled_screen = 1;
--- 4572,4578 ----
  	if(!(role && role->fcc))
  	  fcc = get_fcc_based_on_to(outgoing->to);
  
! 	pine_send(NULL, outgoing, &body, "\"MAILTO\" COMPOSE",
  		  role, fcc, &fake_reply, redraft_pos, NULL, NULL, 0);
  	rv++;
  	ps_global->mangled_screen = 1;
***************
*** 5178,5184 ****
         && !strucmp(att->body->subtype, "plain")
         && (parmval = rfc2231_get_param(att->body->parameter,
  				       "format", NULL, NULL))){
! 	if(!strucmp(parmval, "flowed"))
  	  is_flowed_msg = 1;
  	fs_give((void **) &parmval);
      }
--- 5182,5189 ----
         && !strucmp(att->body->subtype, "plain")
         && (parmval = rfc2231_get_param(att->body->parameter,
  				       "format", NULL, NULL))){
! 	if(!strucmp(parmval, "flowed") &&
! 	   F_OFF(F_QUELL_DISPLAYING_FLOWED_TEXT, ps_global))
  	  is_flowed_msg = 1;
  	fs_give((void **) &parmval);
      }
diff -rc pine4.60/pine/pine.h pine4.60.cumulative/pine/pine.h
*** pine4.60/pine/pine.h	2004-05-07 15:17:48.000000000 -0700
--- pine4.60.cumulative/pine/pine.h	2004-07-12 10:32:55.000000000 -0700
***************
*** 1148,1153 ****
--- 1148,1154 ----
  	F_VERTICAL_FOLDER_LIST,
  	F_TAB_CHK_RECENT,
  	F_AUTO_REPLY_TO,
+ 	F_SEPARATE_REPLY_ALL,
  	F_VERBOSE_POST,
  	F_FCC_ON_BOUNCE,
  	F_SEND_WO_CONFIRM,
***************
*** 1264,1269 ****
--- 1265,1272 ----
  	F_STRIP_WS_BEFORE_SEND,
  	F_QUELL_FLOWED_TEXT,
  	F_COMPOSE_ALWAYS_DOWNGRADE,
+ 	F_QUELL_DISPLAYING_FLOWED_TEXT,
+ 	F_REMOVE_TRAILING_QUOTE,
  #ifdef	_WINDOWS
  	F_ENABLE_TRAYICON,
  	F_QUELL_SSL_LARGEBLOCKS,
***************
*** 2842,2847 ****
--- 2845,2851 ----
  #define	MC_ADDABOOK	746
  #define	MC_DELABOOK	747
  #define	MC_VIEW_ENTRY	748
+ #define	MC_REPLY_ALL	749
  #define	MC_EDITABOOK	750
  #define	MC_OPENABOOK	751
  #define	MC_POPUP	752
***************
*** 2964,2969 ****
--- 2968,2976 ----
  #define	REPLY_MENU	{"R", "Reply", \
  			 {MC_REPLY,1,{'r'}}, \
  			 KS_REPLY}
+ #define	REPLY_ALL_MENU	{"=", "Reply All", \
+ 			 {MC_REPLY_ALL,1,{'='}}, \
+ 			 KS_REPLYALL}
  #define	FORWARD_MENU	{"F", "Forward", \
  			 {MC_FORWARD,1,{'f'}}, \
  			 KS_FORWARD}
***************
*** 4988,4994 ****
  int         sp_nremote_permlocked PROTO((void));
  
  /*-- reply.c --*/
! void	    reply PROTO((struct pine *, ACTION_S *));
  void	    reply_seed PROTO((struct pine *, ENVELOPE *, ENVELOPE *,
  			      ADDRESS *, ADDRESS *, ADDRESS *, ADDRESS *,
  			      BUILDER_ARG *, int));
--- 4995,5001 ----
  int         sp_nremote_permlocked PROTO((void));
  
  /*-- reply.c --*/
! void	    reply PROTO((struct pine *, ACTION_S *, int));
  void	    reply_seed PROTO((struct pine *, ENVELOPE *, ENVELOPE *,
  			      ADDRESS *, ADDRESS *, ADDRESS *, ADDRESS *,
  			      BUILDER_ARG *, int));
***************
*** 5069,5077 ****
  void	    compose_screen PROTO((struct pine *)); 
  void	    alt_compose_screen PROTO((struct pine *)); 
  void	    compose_mail PROTO((char *, char *, ACTION_S *, PATMT *, gf_io_t));
! void	    pine_send PROTO((ENVELOPE *, BODY **, char *, ACTION_S *,
! 			     char *, REPLY_S *, REDRAFT_POS_S *, char *,
! 			     PINEFIELD *, int));
  int	    pine_simple_send PROTO((ENVELOPE *, BODY **, char *, char *,
  				    char **, int));
  char	   *pine_send_status PROTO((int, char *, char *, int *));
--- 5076,5084 ----
  void	    compose_screen PROTO((struct pine *)); 
  void	    alt_compose_screen PROTO((struct pine *)); 
  void	    compose_mail PROTO((char *, char *, ACTION_S *, PATMT *, gf_io_t));
! void	    pine_send PROTO((ENVELOPE *, ENVELOPE *, BODY **, char *,
! 			     ACTION_S *, char *, REPLY_S *, REDRAFT_POS_S *,
! 			     char *, PINEFIELD *, int));
  int	    pine_simple_send PROTO((ENVELOPE *, BODY **, char *, char *,
  				    char **, int));
  char	   *pine_send_status PROTO((int, char *, char *, int *));
diff -rc pine4.60/pine/pine.hlp pine4.60.cumulative/pine/pine.hlp
*** pine4.60/pine/pine.hlp	2004-05-07 15:17:54.000000000 -0700
--- pine4.60.cumulative/pine/pine.hlp	2004-07-12 10:28:27.000000000 -0700
***************
*** 3049,3054 ****
--- 3049,3055 ----
  <li><a href="h_config_quell_charset_warning">FEATURE: Quell-Charset-Warning</a>
  <li><a href="h_config_quell_content_id">FEATURE: Quell-Content-ID</a>
  <li><a href="h_config_quell_dead_letter">FEATURE: Quell-Dead-Letter-On-Cancel</a>
+ <li><a href="h_config_quell_displaying_flowed_text">FEATURE: Quell-Displaying-Flowed-Text</a>
  <li><a href="h_config_quell_empty_dirs">FEATURE: Quell-Empty-Directories</a>
  <li><a href="h_config_quell_post_prompt">FEATURE: Quell-Extra-Post-Prompt</a>
  <li><a href="h_config_quell_filtering_done_message">FEATURE: Quell-Filtering-Done-Message</a>
***************
*** 3075,3080 ****
--- 3076,3082 ----
  <li><a href="h_config_save_advances">FEATURE: Save-Will-Advance</a>
  <li><a href="h_config_save_wont_delete">FEATURE: Save-Will-Not-Delete</a>
  <li><a href="h_config_quote_all_froms">FEATURE: Save-Will-Quote-Leading-Froms</a>
+ <li><a href="h_config_remove_trailing_quote">FEATURE: Remove-Trailing-Quote-On-Send</a>
  <li><a href="h_config_scramble_message_id">FEATURE: Scramble-Message-ID</a>
  <li><a href="h_config_select_wo_confirm">FEATURE: Select-Without-Confirm</a>
  <li><a href="h_config_send_wo_confirm">FEATURE: Send-Without-Confirm</a>
***************
*** 21461,21466 ****
--- 21463,21502 ----
  &lt;End of help on this topic&gt;
  </BODY>
  </HTML>
+ ====== h_config_separate_reply_all =====
+ <HTML>
+ <HEAD>
+ <TITLE>OPTION: Separate-Reply-All</TITLE>
+ </HEAD>
+ <BODY>
+ <H1>OPTION: Separate-Reply-All</H1>
+ 
+ This option specifies an aspect of Pine's Reply command. Normally, Pine offers
+ a single reply command; if you reply to an email with multiple recipients, Pine
+ asks you whether you want to reply to all recipients, or just to the sender.
+ 
+ <P>
+ If this option is set, the standard reply command will always reply to the
+ sender (or reply-to address). A separate reply-to-all command will be offered,
+ which will always reply to all recipients.
+ 
+ <P>
+ This option is intended to discourage unintentional replying to all. Users
+ often inadvertently train themselves to "click past" prompts, such as Pine's
+ "reply to all recipients?" prompt. This reduces their effectiveness. Separating
+ the reply and reply-to-all commands may alleviate this problem.
+ 
+ <P>
+ Note: the reply-to-all command is not offerred in the attachment index or
+ attachment view, but if this option is set, the standard reply command in those
+ screens will still only reply to the sender.
+ 
+ <UL>   
+ <LI><A HREF="h_finding_help">Finding more information and requesting help</A>
+ </UL><P>
+ &lt;End of help on this topic&gt;
+ </BODY>
+ </HTML>
  ====== h_config_empty_hdr_msg =====
  <HTML>
  <HEAD>
***************
*** 24768,24773 ****
--- 24804,24829 ----
  &lt;End of help on this topic&gt;
  </BODY>
  </HTML>
+ ====== h_config_quell_displaying_flowed_text =====
+ <HTML>
+ <HEAD>
+ <TITLE>FEATURE: Quell-Displaying-Flowed-Text</TITLE>
+ </HEAD>
+ <BODY>
+ <H1>FEATURE: Quell-Displaying-Flowed-Text</H1>
+ 
+ Beginning with version 4.60, Pine displays flowed text where possible. The
+ method for viewing flowed text is defined by
+ <A HREF="http://www.ietf.org/rfc/rfc2646.txt">RFC 2646</A>; for more
+ information, see <A HREF="h_config_quell_flowed_text">Quell-Flowed-Text</A>.
+ <P>
+ If this option is set, then Pine will not display flowed text when viewing
+ messages.
+ 
+ <P>
+ &lt;End of help on this topic&gt;
+ </BODY>
+ </HTML>
  ====== h_config_prefer_plain_text =====
  <HTML>
  <HEAD>
***************
*** 26077,26082 ****
--- 26133,26189 ----
  &lt;End of help on this topic&gt;
  </BODY>
  </HTML>
+ ====== h_config_remove_trailing_quote =====
+ <HTML>
+ <HEAD>
+ <TITLE>FEATURE: Remove-Trailing-Quote-On-Send</TITLE>
+ </HEAD>
+ <BODY>
+ <H1>FEATURE: Remove-Trailing-Quote-On-Send</H1>
+ 
+ If set, this feature removes a trailing quote, if any, from the composition
+ before sending. It also adds a command, ^4, to remove a trailing quote
+ manually.
+ 
+ <P>
+ A trailing quote is a part of an email that was included in the composition,
+ each line prefixed with the indent string. usually as a result of replying to
+ an email. To be a trailing quote, it must be the *last* text in the email,
+ except for (possibly) the signature. For example, if you use the default indent
+ string &quot;> &quot;, the last three lines of this example are a trailing
+ quote:
+ 
+ <P>
+ <PRE>
+ --
+ On Fri, 4 Jun 2004, Jane Doe wrote:
+ 
+ > Thanks for the invitation! Should I bring anything?<BR>
+ 
+ No, I have everything I need. Thanks though!
+ 
+ > I'll see you soon...
+ >
+ > -Jane
+ --
+ </PRE>
+ 
+ <P>
+ Trailing quotes can often become long and unwieldy, especially if you often
+ email with people who top-post. If they get bad enough, they can unfortunately
+ discourage quoting altogether. This option was designed to make proper quoting 
+ practical again.
+ 
+ <P>
+ If the last quote is preceded by the reply leadin line, usually something like 
+ "<SAMP>On Oct 27 Fred Flintstone wrote:</SAMP>", then it is considered a "whole"
+ quote. In that case, the author probably intentionally included the whole
+ quote, or is top-posting; either way, the quote will not be removed. 
+ 
+ <P>
+ &lt;End of help on this topic&gt;
+ </BODY>
+ </HTML>
  ====== h_config_normal_color =====
  <HTML>
  <HEAD>
diff -rc pine4.60/pine/reply.c pine4.60.cumulative/pine/reply.c
*** pine4.60/pine/reply.c	2004-05-06 10:47:26.000000000 -0700
--- pine4.60.cumulative/pine/reply.c	2004-07-12 10:28:19.000000000 -0700
***************
*** 146,154 ****
     - pass off to pine_send()
    ---*/
  void
! reply(pine_state, role_arg)
       struct pine *pine_state;
       ACTION_S    *role_arg;
  {
      ADDRESS    *saved_from, *saved_to, *saved_cc, *saved_resent;
      ENVELOPE   *env, *outgoing;
--- 146,155 ----
     - pass off to pine_send()
    ---*/
  void
! reply(pine_state, role_arg, flags)
       struct pine *pine_state;
       ACTION_S    *role_arg;
+      int         flags;
  {
      ADDRESS    *saved_from, *saved_to, *saved_cc, *saved_resent;
      ENVELOPE   *env, *outgoing;
***************
*** 158,164 ****
      char       *tmpfix = NULL, *prefix = NULL;
      long        msgno, totalm, rflags, *seq = NULL;
      int         i, include_text = 0, times = -1, warned = 0,
! 		flags = RSF_QUERY_REPLY_ALL, reply_raw_body = 0;
      gf_io_t     pc;
      PAT_STATE   dummy;
      REDRAFT_POS_S *redraft_pos = NULL;
--- 159,165 ----
      char       *tmpfix = NULL, *prefix = NULL;
      long        msgno, totalm, rflags, *seq = NULL;
      int         i, include_text = 0, times = -1, warned = 0,
!                 reply_raw_body = 0;
      gf_io_t     pc;
      PAT_STATE   dummy;
      REDRAFT_POS_S *redraft_pos = NULL;
***************
*** 656,662 ****
  #endif
  
      /* partially formatted outgoing message */
!     pine_send(outgoing, &body, "COMPOSE MESSAGE REPLY",
  	      role, fcc.tptr, &reply, redraft_pos, NULL, NULL, 0);
    done:
      pine_free_body(&body);
--- 657,663 ----
  #endif
  
      /* partially formatted outgoing message */
!     pine_send(env, outgoing, &body, "COMPOSE MESSAGE REPLY",
  	      role, fcc.tptr, &reply, redraft_pos, NULL, NULL, 0);
    done:
      pine_free_body(&body);
***************
*** 3904,3910 ****
  #if	defined(DOS) && !defined(_WINDOWS)
      free((void *)reserve);
  #endif
!     pine_send(outgoing, &body, "FORWARD MESSAGE",
  	      role, NULL, reply.flags ? &reply : NULL, redraft_pos,
  	      NULL, NULL, FALSE);
  
--- 3905,3911 ----
  #if	defined(DOS) && !defined(_WINDOWS)
      free((void *)reserve);
  #endif
!     pine_send(env, outgoing, &body, "FORWARD MESSAGE",
  	      role, NULL, reply.flags ? &reply : NULL, redraft_pos,
  	      NULL, NULL, FALSE);
  
***************
*** 4400,4406 ****
  		     source);
  
  	if((enc_error = gf_pipe(gc, pc)) == NULL){
! 	    pine_send(env, &body, "SEND MESSAGE", role, NULL, NULL, NULL,
  		      NULL, NULL, FALSE);
  	    pine_state->mangled_screen = 1;
  	}
--- 4401,4407 ----
  		     source);
  
  	if((enc_error = gf_pipe(gc, pc)) == NULL){
! 	    pine_send(NULL, env, &body, "SEND MESSAGE", role, NULL, NULL, NULL,
  		      NULL, NULL, FALSE);
  	    pine_state->mangled_screen = 1;
  	}
***************
*** 5906,5911 ****
--- 5907,5913 ----
      pbf.always_spell_check = F_ON(F_ALWAYS_SPELL_CHECK, ps_global);
      pbf.strip_ws_before_send = F_ON(F_STRIP_WS_BEFORE_SEND, ps_global);
      pbf.allow_flowed_text = 0;
+     pbf.remove_trailing_quote = 0;
  
      pbf.pine_anchor   = set_titlebar(title,
  				      ps_global->mail_stream,
***************
*** 6094,6099 ****
--- 6096,6102 ----
      pbf.always_spell_check = F_ON(F_ALWAYS_SPELL_CHECK, ps_global);
      pbf.strip_ws_before_send = F_ON(F_STRIP_WS_BEFORE_SEND, ps_global);
      pbf.allow_flowed_text = 0;
+     pbf.remove_trailing_quote = 0;
  
      pbf.pine_anchor   = set_titlebar(title,
  				      ps_global->mail_stream,
diff -rc pine4.60/pine/send.c pine4.60.cumulative/pine/send.c
*** pine4.60/pine/send.c	2004-05-06 10:47:28.000000000 -0700
--- pine4.60.cumulative/pine/send.c	2004-07-12 10:28:10.000000000 -0700
***************
*** 980,986 ****
  	  fs_give((void **)&tmp_fcc);
      }
  
!     pine_send(outgoing, &body, COMPOSE_MAIL_TITLE, role, fcc,
  	      reply, redraft_pos, lcc, custom, fcc_is_sticky);
  
      if(reply){
--- 980,986 ----
  	  fs_give((void **)&tmp_fcc);
      }
  
!     pine_send(NULL, outgoing, &body, COMPOSE_MAIL_TITLE, role, fcc,
  	      reply, redraft_pos, lcc, custom, fcc_is_sticky);
  
      if(reply){
***************
*** 1001,1006 ****
--- 1001,1009 ----
      if(lcc)
        fs_give((void **)&lcc);
  
+     if(sig)
+       fs_give((void **)&sig);
+ 
      mail_free_envelope(&outgoing);
      pine_free_body(&body);
      free_redraft_pos(&redraft_pos);
***************
*** 3082,3089 ****
  stored in a storage object (see filter.c).
    ----*/
  void
! pine_send(outgoing, body, editor_title, role, fcc_arg, reply, redraft_pos,
! 	  lcc_arg, custom, sticky_fcc)
      ENVELOPE  *outgoing;  /* c-client envelope for outgoing message */
      BODY     **body;   
      char      *editor_title;
--- 3085,3093 ----
  stored in a storage object (see filter.c).
    ----*/
  void
! pine_send(reply_env, outgoing, body, editor_title, role, fcc_arg, reply,
! 	  redraft_pos, lcc_arg, custom, sticky_fcc)
!     ENVELOPE  *reply_env;  /* may be NULL */
      ENVELOPE  *outgoing;  /* c-client envelope for outgoing message */
      BODY     **body;   
      char      *editor_title;
***************
*** 3101,3106 ****
--- 3105,3111 ----
      char	       *start_here_name = NULL;
      char               *suggested_nntp_server = NULL;
      char	       *title = NULL;
+     char	       reply_leadin[2000];
      struct headerentry *he, *headents, *he_to, *he_fcc, *he_news, *he_lcc,
  		       *he_from = NULL;
      PINEFIELD          *pfields, *pf, *pf_nobody = NULL,
***************
*** 3114,3119 ****
--- 3119,3125 ----
      STORE_S	       *orig_so = NULL;
      PICO	        pbuf1, *save_previous_pbuf;
      REDRAFT_POS_S      *local_redraft_pos = NULL;
+     gf_io_t	       reply_leadin_pc;
  #ifdef	DOS
      char               *reserve;
  #endif
***************
*** 3172,3177 ****
--- 3178,3184 ----
  			      && F_OFF(F_STRIP_WS_BEFORE_SEND, ps_global)
  			      && (strcmp(pbf->quote_str, "> ") == 0
  				  || strcmp(pbf->quote_str, ">") == 0));
+     pbf->remove_trailing_quote = F_ON(F_REMOVE_TRAILING_QUOTE, ps_global);
      pbf->edit_offset   = 0;
      title               = cpystr(set_titlebar(editor_title,
  				    ps_global->mail_stream,
***************
*** 3179,3184 ****
--- 3186,3202 ----
  				    ps_global->cur_folder,ps_global->msgmap, 
  				    0, FolderName, 0, 0, NULL));
      pbf->pine_anchor   = title;
+     pbf->sig           = detoken(role, outgoing, 0, 0, 1, NULL, NULL);
+ 
+     if(reply_env){
+ 	gf_set_writec(&reply_leadin_pc, reply_leadin, 2000L, CharStar);
+ 	reply_delimiter(reply_env, role, reply_leadin_pc);
+ 	/* strip two trailing newlines */
+ 	reply_leadin[strlen(reply_leadin) - 2] = '\0';
+ 	pbf->reply_leadin = cpystr(reply_leadin);
+     }
+     else
+ 	pbf->reply_leadin = NULL;
  
  #if	defined(DOS) || defined(OS2)
      if(!pbf->oper_dir && ps_global->VAR_FILE_DIR){
***************
*** 3261,3266 ****
--- 3279,3288 ----
  	      case 'x': /* ^C */
  		q_status_message(SM_ORDER, 0, 3, "Message cancelled");
  		dprint(4, (debugfile, "=== send: cancelled\n"));
+ 		if (pbf->sig)
+ 		    fs_give((void **)&pbf->sig);
+ 		if (pbf->reply_leadin)
+ 		    fs_give((void **)&pbf->reply_leadin);
  		pbf = save_previous_pbuf;
  		return;
  
***************
*** 5156,5161 ****
--- 5178,5189 ----
  
      free_attachment_list(&pbf->attachments);
  
+     if(pbf->sig)
+ 	fs_give((void **)&pbf->sig);
+ 
+     if (pbf->reply_leadin)
+ 	fs_give((void **)&pbf->reply_leadin);
+ 
      standard_picobuf_teardown(pbf);
  
      for(i=0; i < fixed_cnt; i++){
